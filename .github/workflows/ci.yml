# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  release:
    types: [created]
  workflow_dispatch:
  schedule:
    - cron: '40 17 * * 2'

permissions:
  pull-requests: write
  contents: write
  packages: write

env:
  JAVA_VERSION: 11
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  build:
    name: Build // ${{ matrix.build }}
    strategy:
      matrix:
        build: [gradle, maven]
        os: [ubuntu-latest]
        java: [11]

    runs-on: ubuntu-latest
    container: wirebot/cryptobox:1.3.0
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Environment Variables
        run: |
          echo "POSTGRES_USER=postgres" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=postgres" >> $GITHUB_ENV
          echo "POSTGRES_URL=postgres:5432/postgres" >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - if: matrix.build == 'gradle'
        name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - if: matrix.build == 'gradle'
        name: Build
        run: |
          ./gradlew build

      - if: matrix.build == 'maven'
        name: Execute Tests
        run: |
          mvn test -DargLine="-Djava.library.path=$LD_LIBRARY_PATH"

      - if: matrix.build == 'maven'
        name: Try to create package
        run: |
          mvn package -DskipTests

  publish:
    needs: [build]
    name: 'Package // Publish'
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Publish
        continue-on-error: true
        run: |
          ./gradlew publish -x test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          MAVEN_OPTS: >-
            --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
            --add-opens=java.base/java.text=ALL-UNNAMED
            --add-opens=java.base/java.util=ALL-UNNAMED
            --add-opens=java.desktop/java.awt.font=ALL-UNNAMED
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

  analyze:
    needs: [build]
    name: 'Analyze // ${{ matrix.language }}'
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: java-kotlin
            build-mode: manual
    timeout-minutes: 360
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      # This is only for running 'act' locally
      - if: matrix.build-mode == 'manual'
        name: Setup Node
        uses: actions/setup-node@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        env:
          GITHUB_RUN_ATTEMPT: ${{ github.run_number }}
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - if: matrix.build-mode == 'manual'
        name: Setup Java
        uses: actions/setup-java@v4
        with:
          # Running setup-java again overwrites the settings.xml
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - if: matrix.build-mode == 'manual'
        name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - if: matrix.build-mode == 'manual'
        name: Build
        run: |
          ./gradlew build -x test

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:${{matrix.language}}'
