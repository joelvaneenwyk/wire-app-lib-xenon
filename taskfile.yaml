# https://taskfile.dev

version: '3'

vars:
  REDIRECT_TO_NULL: '{{ if eq OS "windows" }}> nul 2>&1{{ else }}>/dev/null{{ end }}'
  RUN: '{{ if eq OS "windows" }}cmd.exe /D /E:ON /C{{ else }}bash -c{{ end }}'

  GRADLE_EXE: '{{.TASKFILE_DIR}}/gradlew{{ if eq OS "windows" }}.bat{{end}}'
  GRADLE: '{{.RUN}} "{{fromSlash .GRADLE_EXE}}"'
  MAVEN_POM: '{{.TASKFILE_DIR}}/pom.xml'
  MAVEN_EXE:  "scoop/apps/maven/current/bin/mvn.cmd"

dotenv: [.env]

tasks:
  default:
    desc: Run build
    cmds:
      - task: build

  rebuild:
    desc: Clean and build
    cmds:
      - task: clean
      - task: build

  build:
    desc: Build the project using both Gradle and Maven
    cmds:
      - task: gradle-build
      - task: maven-build

  clean:
    desc: Clean all intermediate files using Git and build tools
    cmds:
      - cmd: git add .
      - cmd: git clean -xfd

  test:
    desc: Run all tests
    cmds:
      - task: gradle-test

  publish:
    vars:
      GITHUB_ACTOR: joelvaneenwyk
    cmds:
      - cmd: |
          {{.GRADLE}} publish

  mvn:
    desc: Run Maven commands
    aliases: [maven]
    required: [MVN_ARGS]
    vars:
      MVN_INPUT_ARGS: '{{ coalesce .MVN_ARGS .CLI_ARGS | default "" }}'
      MVN_SCOOP: '{{ joinPath .USERPROFILE "scoop/apps/maven/current/bin/mvn.cmd" }}'
    cmds:
      - cmd: >-
          {{.RUN}}
          "
          set "MAVEN_OPTS=" &&
          set "MAVEN_ARGS=" &&
          set "MAVEN_BATCH_ECHO=on" &&
          call "{{ fromSlash .MVN_SCOOP | shellQuote }}"
          -f "{{ fromSlash .MAVEN_POM | shellQuote }}"
          {{ .MVN_INPUT_ARGS }}
          "
        platforms: [windows]
      - cmd: >-
          mvn
          -f "{{ fromSlash .MAVEN_POM }}"
          {{ .MVN_INPUT_ARGS }}
        platforms: [linux, darwin]

  analyze-dependencies:
    aliases: [deps]
    cmds:
      - cmd: |
          {{.GRADLE}} dependencies
      - task: mvn
        vars: { MVN_ARGS: dependency:analyze }

  gradle-test:
    aliases: [gt, test-gradle]
    internal: true
    deps: [gradle]
    cmds:
      - task: db-start
      - defer: { task: db-stop }
      - cmd: |
          "{{ fromSlash .GRADLE_EXE}}" test

  gradle-build:
    internal: true
    aliases: [gradle, gradlew, g]
    cmds:
      - cmd: >-
          {{.GRADLE}} clean
      - cmd: >-
          {{.GRADLE}} build
          -x test
          --no-build-cache
          --dependency-verification=strict
          --refresh-dependencies
          --rerun-tasks

  maven-build:
    aliases: [maven-b, mvn-build, mvnb, mb]
    cmds:
      - task: mvn
        vars: { MVN_ARGS: 'test-compile' }
      - task: mvn
        vars: { MVN_ARGS: 'package -DskipTests' }
      - task: maven-test

  maven-test:
    internal: true
    aliases: [mt, maven-test, mvn-test]
    cmds:
      - task: db-start
      - defer: { task: db-stop }
      - task: mvn
        vars: { MVN_ARGS: 'test' }

  maven-publish:
    cmds:
      - task: mvn
        vars: { MVN_ARGS: '-DskipTests clean deploy' }

  db-start:
    internal: true
    cmds:
      - task: db-stop
      - cmd: |
          docker compose up -d db

  db-stop:
    internal: true
    cmds:
      - cmd: |
          docker compose stop db
        ignore_error: true

  npm-prettier-format:
    desc: Format all Java files using Prettier
    aliases: [fmt, format, prettier]
    deps: [npm-clean]
    silent: true
    cmds:
      - defer: { task: npm-clean }
      - cmd: |
          npm init -y {{.REDIRECT_TO_NULL}}
        ignore_error: true
      - cmd: |
          npm install prettier@latest prettier-plugin-java@latest {{.REDIRECT_TO_NULL}}
      - cmd: >-
          "{{ joinPath .TASKFILE_DIR "node_modules" ".bin" "prettier" }}"
          --single-quote
          --print-width 120
          --plugin=prettier-plugin-java
          --write
          "{{ .TASKFILE_DIR }}"

  npm-clean:
    silent: true
    status:
      - test ! -f package.json
      - test ! -f package-lock.json
      - test ! -d node_modules
    cmds:
      - cmd: |
          rm -rf node_modules package.json package-lock.json
        platforms: [linux, darwin]
      - cmd: |
          cmd.exe /D /E:ON /C rmdir /s /q node_modules {{.REDIRECT_TO_NULL}}
        platforms: [windows]
        ignore_error: true
      - cmd: |
          cmd.exe /D /E:ON /C del package.json package-lock.json {{.REDIRECT_TO_NULL}}
        platforms: [windows]
        ignore_error: true
      - echo "Removed left-over files from running 'npm' locally."
